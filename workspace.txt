fct_scraper_backend/
├── Dockerfile
├── README.md
├── app.py
├── celery_app.py
├── docker-compose.yml
├── requirements.txt
├── state_instagram.json  # datos de inicio de sesión de Instagram
├── state_tiktok.json
├── state_facebook.json
├── test_*.py             # (todos los archivos de prueba)
├── workspace.txt

├── exports/ #aquí se guardan también los archivos que descargamos
│   └── exporter.py

├── scraping/
│   ├── facebook/
│   │   ├── __init__.py
│   │   ├── perfil.py
│   ├── telegram/
│   │   ├── __init__.py
│   │   ├── canal.py
│   ├── tiktok/
│   │   ├── __init__.py
│   │   ├── perfil.py
│   │   ├── seguidos.py
│   │   └── seguidores.py
│   ├── web/
│   │   ├── __init__.py
│   │   └── web_scraper.py
│   ├── x/
│   │   ├── __init__.py
│   │   ├── perfil.py
│   ├── youtube/
│   │   ├── __init__.py
│   │   ├── canal.py
│   └── instagram/
│       ├── __init__.py
│       ├── perfil.py
│       ├── seguidores.py
│       └── seguidos.py

├── utils/
│   ├── __init__.py
│   ├── busqueda_cruzada.py
│   ├── history.py
│   ├── normalizador.py
│   └── validator.py

├── routes/
│   ├── __init__.py
│   ├── web.py
│   ├── instagram.py
│   ├── youtube.py
│   ├── facebook.py
│   ├── x.py
│   ├── tiktok.py
│   ├── telegram.py
│   └── resultados.py

├── static/
│   ├── css/
│   │   └── style.css
│   ├── js/
│   │   └── main.js
│   └── index.html

├── tasks/
│   ├── __init__.py
│   ├── celery_worker.py
│   ├── instagram.py
│   └── tiktok.py

├── services/
│   ├── proxy_loader.py      # ✅ Convierte raw_proxies.txt → proxies.json
│   ├── proxy_checker.py     # ✅ Verifica si un proxy funciona (requests + Playwright)
│   ├── proxy_pool.py        # ✅ Gestiona el pool: carga, valida, da uno aleatorio, etc.
│   ├── proxy_format.py      # ✅ Formatea el proxy para requests o Playwright
│   ├── playwright_tools.py  # ⚙️ Usa proxies válidos con Playwright para scrapear
│   ├── raw_proxies.txt      # ✍️ Proxies en formato plano (copiados de IPRoyal)
│   ├── proxies.json         # ✅ Proxies válidos listos para usar (generado)
│   ├── logging_config.py    # ✅ Define formato y salida de los logs
│   ├── user_agents.py       # ⚙️ Lista rotativa de user-agents
│   ├── proxy_scraper.py     # ❌ Inutilizado